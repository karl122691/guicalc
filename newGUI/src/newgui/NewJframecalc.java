/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package newgui;

import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class NewJframecalc extends javax.swing.JFrame {

    /**
     * Creates new form NewJframecalc
     */
    public NewJframecalc() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        screen = new javax.swing.JLabel();
        AC = new javax.swing.JButton();
        ANS = new javax.swing.JButton();
        BS = new javax.swing.JButton();
        DIVIDE = new javax.swing.JButton();
        SEVEN = new javax.swing.JButton();
        NINE = new javax.swing.JButton();
        EIGHT = new javax.swing.JButton();
        PRODUCT = new javax.swing.JButton();
        THREE = new javax.swing.JButton();
        TWO = new javax.swing.JButton();
        ADD = new javax.swing.JButton();
        FOUR = new javax.swing.JButton();
        SIX = new javax.swing.JButton();
        FIVE = new javax.swing.JButton();
        MINUS = new javax.swing.JButton();
        ONE = new javax.swing.JButton();
        POINT = new javax.swing.JButton();
        POSNEG = new javax.swing.JButton();
        EQUALS = new javax.swing.JButton();
        ZERO = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        screen.setBackground(new java.awt.Color(153, 153, 153));
        screen.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        screen.setForeground(new java.awt.Color(0, 0, 0));
        screen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        screen.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, new java.awt.Color(102, 102, 102)));
        screen.setOpaque(true);
        getContentPane().add(screen, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 318, 39));

        AC.setBackground(new java.awt.Color(204, 204, 204));
        AC.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        AC.setForeground(new java.awt.Color(102, 102, 102));
        AC.setText("AC");
        AC.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        AC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        AC.setOpaque(true);
        AC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACActionPerformed(evt);
            }
        });
        getContentPane().add(AC, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 51, 75, 75));

        ANS.setBackground(new java.awt.Color(204, 204, 204));
        ANS.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        ANS.setForeground(new java.awt.Color(102, 102, 102));
        ANS.setText("ANS");
        ANS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        ANS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ANS.setOpaque(true);
        ANS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ANSActionPerformed(evt);
            }
        });
        getContentPane().add(ANS, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 51, 75, 75));

        BS.setBackground(new java.awt.Color(204, 204, 204));
        BS.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        BS.setForeground(new java.awt.Color(102, 102, 102));
        BS.setText("‚Üê");
        BS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        BS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BS.setOpaque(true);
        BS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSActionPerformed(evt);
            }
        });
        getContentPane().add(BS, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 51, 75, 75));

        DIVIDE.setBackground(new java.awt.Color(204, 204, 204));
        DIVIDE.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        DIVIDE.setForeground(new java.awt.Color(102, 102, 102));
        DIVIDE.setText("/");
        DIVIDE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        DIVIDE.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DIVIDE.setOpaque(true);
        DIVIDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DIVIDEActionPerformed(evt);
            }
        });
        getContentPane().add(DIVIDE, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 51, 75, 75));

        SEVEN.setBackground(new java.awt.Color(204, 204, 204));
        SEVEN.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        SEVEN.setForeground(new java.awt.Color(102, 102, 102));
        SEVEN.setText("7");
        SEVEN.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        SEVEN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SEVEN.setOpaque(true);
        SEVEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SEVENActionPerformed(evt);
            }
        });
        getContentPane().add(SEVEN, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 132, 75, 75));

        NINE.setBackground(new java.awt.Color(204, 204, 204));
        NINE.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        NINE.setForeground(new java.awt.Color(102, 102, 102));
        NINE.setText("9");
        NINE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        NINE.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NINE.setOpaque(true);
        NINE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NINEActionPerformed(evt);
            }
        });
        getContentPane().add(NINE, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 132, 75, 75));

        EIGHT.setBackground(new java.awt.Color(204, 204, 204));
        EIGHT.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        EIGHT.setForeground(new java.awt.Color(102, 102, 102));
        EIGHT.setText("8");
        EIGHT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        EIGHT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EIGHT.setOpaque(true);
        EIGHT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EIGHTActionPerformed(evt);
            }
        });
        getContentPane().add(EIGHT, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 132, 75, 75));

        PRODUCT.setBackground(new java.awt.Color(204, 204, 204));
        PRODUCT.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        PRODUCT.setForeground(new java.awt.Color(102, 102, 102));
        PRODUCT.setText("*");
        PRODUCT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        PRODUCT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PRODUCT.setOpaque(true);
        PRODUCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PRODUCTActionPerformed(evt);
            }
        });
        getContentPane().add(PRODUCT, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 132, 75, 75));

        THREE.setBackground(new java.awt.Color(204, 204, 204));
        THREE.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        THREE.setForeground(new java.awt.Color(102, 102, 102));
        THREE.setText("3");
        THREE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        THREE.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        THREE.setOpaque(true);
        THREE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                THREEActionPerformed(evt);
            }
        });
        getContentPane().add(THREE, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 294, 75, 75));

        TWO.setBackground(new java.awt.Color(204, 204, 204));
        TWO.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        TWO.setForeground(new java.awt.Color(102, 102, 102));
        TWO.setText("2");
        TWO.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        TWO.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TWO.setOpaque(true);
        TWO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TWOActionPerformed(evt);
            }
        });
        getContentPane().add(TWO, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 294, 75, 75));

        ADD.setBackground(new java.awt.Color(204, 204, 204));
        ADD.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        ADD.setForeground(new java.awt.Color(102, 102, 102));
        ADD.setText("+");
        ADD.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        ADD.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ADD.setOpaque(true);
        ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDActionPerformed(evt);
            }
        });
        getContentPane().add(ADD, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 294, 75, 75));

        FOUR.setBackground(new java.awt.Color(204, 204, 204));
        FOUR.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        FOUR.setForeground(new java.awt.Color(102, 102, 102));
        FOUR.setText("4");
        FOUR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        FOUR.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FOUR.setOpaque(true);
        FOUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FOURActionPerformed(evt);
            }
        });
        getContentPane().add(FOUR, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 213, 75, 75));

        SIX.setBackground(new java.awt.Color(204, 204, 204));
        SIX.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        SIX.setForeground(new java.awt.Color(102, 102, 102));
        SIX.setText("6");
        SIX.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        SIX.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SIX.setOpaque(true);
        SIX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SIXActionPerformed(evt);
            }
        });
        getContentPane().add(SIX, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 213, 75, 75));

        FIVE.setBackground(new java.awt.Color(204, 204, 204));
        FIVE.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        FIVE.setForeground(new java.awt.Color(102, 102, 102));
        FIVE.setText("5");
        FIVE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        FIVE.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FIVE.setOpaque(true);
        FIVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FIVEActionPerformed(evt);
            }
        });
        getContentPane().add(FIVE, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 213, 75, 75));

        MINUS.setBackground(new java.awt.Color(204, 204, 204));
        MINUS.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        MINUS.setForeground(new java.awt.Color(102, 102, 102));
        MINUS.setText("-");
        MINUS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        MINUS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MINUS.setOpaque(true);
        MINUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MINUSActionPerformed(evt);
            }
        });
        getContentPane().add(MINUS, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 213, 75, 75));

        ONE.setBackground(new java.awt.Color(204, 204, 204));
        ONE.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        ONE.setForeground(new java.awt.Color(102, 102, 102));
        ONE.setText("1");
        ONE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        ONE.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ONE.setOpaque(true);
        ONE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ONEActionPerformed(evt);
            }
        });
        getContentPane().add(ONE, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 294, 75, 75));

        POINT.setBackground(new java.awt.Color(204, 204, 204));
        POINT.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        POINT.setForeground(new java.awt.Color(102, 102, 102));
        POINT.setText(".");
        POINT.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        POINT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        POINT.setOpaque(true);
        POINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POINTActionPerformed(evt);
            }
        });
        getContentPane().add(POINT, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 375, 75, 75));

        POSNEG.setBackground(new java.awt.Color(204, 204, 204));
        POSNEG.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        POSNEG.setForeground(new java.awt.Color(102, 102, 102));
        POSNEG.setText("¬±");
        POSNEG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        POSNEG.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        POSNEG.setOpaque(true);
        POSNEG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                POSNEGActionPerformed(evt);
            }
        });
        getContentPane().add(POSNEG, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 375, 75, 75));

        EQUALS.setBackground(new java.awt.Color(204, 204, 204));
        EQUALS.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        EQUALS.setForeground(new java.awt.Color(102, 102, 102));
        EQUALS.setText("=");
        EQUALS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        EQUALS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EQUALS.setOpaque(true);
        EQUALS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EQUALSActionPerformed(evt);
            }
        });
        getContentPane().add(EQUALS, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 375, 75, 75));

        ZERO.setBackground(new java.awt.Color(204, 204, 204));
        ZERO.setFont(new java.awt.Font("Monospaced", 1, 37)); // NOI18N
        ZERO.setForeground(new java.awt.Color(102, 102, 102));
        ZERO.setText("0");
        ZERO.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 255), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(153, 153, 153)));
        ZERO.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ZERO.setOpaque(true);
        ZERO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZEROActionPerformed(evt);
            }
        });
        getContentPane().add(ZERO, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 375, 75, 75));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String screentext = "";
    String num1 = "";
    String num2 = "";
    double numb1 = 0;
    double numb2 = 0;
    double ans = 0;
    String op = "";
    boolean haspoint = false;
    private void THREEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_THREEActionPerformed
        screentext = screentext + "3";
        screen.setText(screentext);
    }//GEN-LAST:event_THREEActionPerformed

    private void ZEROActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZEROActionPerformed
        screentext = screentext + "0";
        screen.setText(screentext);
    }//GEN-LAST:event_ZEROActionPerformed

    private void POSNEGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POSNEGActionPerformed
        if (screentext != null && !screentext.isEmpty()) {
            if (screentext.startsWith("-")) {
                screentext = screentext.substring(1);
            } else {
                screentext = "-" + screentext;
            }
            screen.setText(screentext);
        } else {
            JOptionPane.showMessageDialog(rootPane, "No number to toggle sign");
        }
    }//GEN-LAST:event_POSNEGActionPerformed

    private void POINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_POINTActionPerformed
        if (haspoint == false) {
            screentext = screentext + ".";
            screen.setText(screentext);
            haspoint = true;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Value already has a point");
        }

    }//GEN-LAST:event_POINTActionPerformed

    private void ONEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ONEActionPerformed
        screentext = screentext + "1";
        screen.setText(screentext);
    }//GEN-LAST:event_ONEActionPerformed

    private void TWOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TWOActionPerformed
        screentext = screentext + "2";
        screen.setText(screentext);        // TODO add your handling code here:
    }//GEN-LAST:event_TWOActionPerformed

    private void FOURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FOURActionPerformed
        screentext = screentext + "4";
        screen.setText(screentext);        // TODO add your handling code here:
    }//GEN-LAST:event_FOURActionPerformed

    private void FIVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FIVEActionPerformed
        screentext = screentext + "5";
        screen.setText(screentext);        // TODO add your handling code here:
    }//GEN-LAST:event_FIVEActionPerformed

    private void SIXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SIXActionPerformed
        screentext = screentext + "6";
        screen.setText(screentext);        // TODO add your handling code here:
    }//GEN-LAST:event_SIXActionPerformed

    private void SEVENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SEVENActionPerformed
        screentext = screentext + "7";
        screen.setText(screentext);        // TODO add your handling code here:
    }//GEN-LAST:event_SEVENActionPerformed

    private void EIGHTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EIGHTActionPerformed
        screentext = screentext + "8";
        screen.setText(screentext);        // TODO add your handling code here:
    }//GEN-LAST:event_EIGHTActionPerformed

    private void NINEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NINEActionPerformed
        screentext = screentext + "9";
        screen.setText(screentext);        // TODO add your handling code here:
    }//GEN-LAST:event_NINEActionPerformed

    private void EQUALSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EQUALSActionPerformed
        if (op.equals("")) {
            num1 = screen.getText();
            numb1 = Double.parseDouble(num1);
            ans = numb1;
            screen.setText(num1);
        } else {
            if (num1.equals("")) {
                num1 = screentext;
                screentext = "";
                screen.setText(num1);
            } else {
                switch (op) {
                    case "+": {
                        num2 = screen.getText();
                        numb1 = Double.parseDouble(num1);
                        numb2 = Double.parseDouble(num2);
                        ans = numb1 + numb2;
                        break;
                    }
                    case "-": {
                        num2 = screen.getText();
                        numb1 = Double.parseDouble(num1);
                        numb2 = Double.parseDouble(num2);
                        ans = numb1 - numb2;
                        break;
                    }
                    case "/": {
                        num2 = screen.getText();
                        numb1 = Double.parseDouble(num1);
                        numb2 = Double.parseDouble(num2);
                        ans = numb1 / numb2;
                        break;
                    }
                    case "*": {
                        num2 = screen.getText();
                        numb1 = Double.parseDouble(num1);
                        numb2 = Double.parseDouble(num2);
                        ans = numb1 * numb2;
                        break;
                    }
                }
                num1 = String.valueOf(ans);
                screen.setText(String.valueOf(ans));
                screentext = "";

            }
        }
        op = "";     // TODO add your handling code here:
    }//GEN-LAST:event_EQUALSActionPerformed

    private void ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDActionPerformed
        if (num1 == "" || num1 == ".") {
            num1 = screentext;
            screentext = "";
            screen.setText(screentext);
        } else {
            switch (op) {
                case "+": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 + numb2;
                    break;
                }
                case "-": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 - numb2;
                    break;
                }
                case "/": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 / numb2;
                    break;
                }
                case "*": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 * numb2;
                    break;
                }
            }
            num1 = String.valueOf(ans);
            screen.setText(String.valueOf(ans));
            screentext = "";
        }

        op = "+";
    }//GEN-LAST:event_ADDActionPerformed

    private void MINUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MINUSActionPerformed
        if (num1 == "" || num1 == ".") {
            num1 = screentext;
            screentext = "";
            screen.setText(screentext);
        } else {
            switch (op) {
                case "+": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 + numb2;
                    break;
                }
                case "-": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 - numb2;
                    break;
                }
                case "/": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 / numb2;
                    break;
                }
                case "*": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 * numb2;
                    break;
                }
            }
            num1 = String.valueOf(ans);
            screen.setText(String.valueOf(ans));
            screentext = "";
        }
        op = "-";
    }//GEN-LAST:event_MINUSActionPerformed

    private void BSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSActionPerformed
        if (screentext != null && !screentext.isEmpty()) {
            // Check if the last character is a decimal point
            if (screentext.endsWith(".")) {
                haspoint = false;
            }
            screentext = screentext.substring(0, screentext.length() - 1);
            screen.setText(screentext);
        } else {
            JOptionPane.showMessageDialog(rootPane, "No characters left to delete");
        }       // TODO add your handling code here:
    }//GEN-LAST:event_BSActionPerformed

    private void PRODUCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PRODUCTActionPerformed
        if (num1 == "" || num1 == ".") {
            num1 = screentext;
            screentext = "";
            screen.setText(screentext);
        } else {
            switch (op) {
                case "+": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 + numb2;
                    break;
                }
                case "-": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 - numb2;
                    break;
                }
                case "/": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 / numb2;
                    break;
                }
                case "*": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 * numb2;
                    break;
                }
            }
            num1 = String.valueOf(ans);
            screen.setText(String.valueOf(ans));
            screentext = "";
        }
        op = "*";        // TODO add your handling code here:
    }//GEN-LAST:event_PRODUCTActionPerformed

    private void DIVIDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DIVIDEActionPerformed
        if (num1 == "" || num1 == ".") {
            num1 = screentext;
            screentext = "";
            screen.setText(screentext);
        } else {
            switch (op) {
                case "+": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 + numb2;
                    break;
                }
                case "-": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 - numb2;
                    break;
                }
                case "/": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 / numb2;
                    break;
                }
                case "*": {
                    num2 = screen.getText();
                    numb1 = Double.parseDouble(num1);
                    numb2 = Double.parseDouble(num2);
                    ans = numb1 * numb2;
                    break;
                }
            }
            num1 = String.valueOf(ans);
            screen.setText(String.valueOf(ans));
            screentext = "";
        }
        op = "/";        // TODO add your handling code here:
    }//GEN-LAST:event_DIVIDEActionPerformed

    private void ACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACActionPerformed
        screentext = "";
        screen.setText(screentext);
        num1 = "";// TODO add your handling code here:
    }//GEN-LAST:event_ACActionPerformed

    private void ANSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ANSActionPerformed
        screentext = String.valueOf(ans);
        screen.setText(screentext);// TODO add your handling code here:
    }//GEN-LAST:event_ANSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJframecalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJframecalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJframecalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJframecalc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJframecalc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AC;
    private javax.swing.JButton ADD;
    private javax.swing.JButton ANS;
    private javax.swing.JButton BS;
    private javax.swing.JButton DIVIDE;
    private javax.swing.JButton EIGHT;
    private javax.swing.JButton EQUALS;
    private javax.swing.JButton FIVE;
    private javax.swing.JButton FOUR;
    private javax.swing.JButton MINUS;
    private javax.swing.JButton NINE;
    private javax.swing.JButton ONE;
    private javax.swing.JButton POINT;
    private javax.swing.JButton POSNEG;
    private javax.swing.JButton PRODUCT;
    private javax.swing.JButton SEVEN;
    private javax.swing.JButton SIX;
    private javax.swing.JButton THREE;
    private javax.swing.JButton TWO;
    private javax.swing.JButton ZERO;
    private javax.swing.JLabel screen;
    // End of variables declaration//GEN-END:variables
}
